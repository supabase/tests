name: Run verification tests against staging env

on:
  schedule:
    - cron: '0 4/12 * * *'
  # Webhook to trigger the workflow from other repositories
  repository_dispatch:
    types: [run-verification-stage]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  verification:
    name: Verification Tests
    runs-on: ubuntu-20.04
    timeout-minutes: 15
    defaults:
      run:
        working-directory: verification

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Install dependencies
        run: npm ci

      - name: Run verification tests
        run: npm run test:stage
        env:
          GITHUB_TOTP: ${{ secrets.VERIFICATION_STAGE_GITHUB_TOTP }}
          GITHUB_USER: ${{ secrets.VERIFICATION_STAGE_GITHUB_USER }}
          GITHUB_PASS: ${{ secrets.VERIFICATION_STAGE_GITHUB_PASS }}
          PROJECT_REF: 'ujepherbynksodbkwomx'
          PROJECT_NAME: 'verifytests'
          PROJECT_DB_PASS: ${{ secrets.VERIFICATION_STAGE_PROJECT_DB_PASS }}
          SUPA_PLATFORM_URI: 'https://api.supabase.green/platform'
          SUPA_META_URI: 'https://api.supabase.green/platform/pg-meta'
          SUPA_PROJECT_DOMAIN: 'supabase.red'
          SUPA_DASHBOARD: 'https://app.supabase.green'

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: allure-results-verification-stage
          path: verification/allure-results
          retention-days: 1

  integration:
    name: Integration Tests
    runs-on: ubuntu-20.04
    timeout-minutes: 15

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Create project
        env:
          GITHUB_TOTP: ${{ secrets.INTEGRATION_STAGE_GITHUB_TOTP }}
          GITHUB_USER: ${{ secrets.INTEGRATION_STAGE_GITHUB_USER }}
          GITHUB_PASS: ${{ secrets.INTEGRATION_STAGE_GITHUB_PASS }}
          SUPA_PLATFORM_URI: 'https://api.supabase.green/platform'
          SUPA_DASHBOARD: 'https://app.supabase.green'
          SUPA_ORG_ID: '166'
          OUTPUT_FILE: '.env.migrate'
          PROJECT_JSON: 'project.json'
        run: |
          npm run project:create
          cp .env.migrate integration/.env.staging
          npm run project:migrate

      - name: Install dependencies
        run: npm ci
        working-directory: integration

      - name: Run integration tests
        run: npm run test:stage
        working-directory: integration

      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: allure-results-integration-stage
          path: integration/allure-results
          retention-days: 1

      - name: Remove project
        run: npm run project:delete
        if: ${{ always() }}
        env:
          GITHUB_TOTP: ${{ secrets.INTEGRATION_STAGE_GITHUB_TOTP }}
          GITHUB_USER: ${{ secrets.INTEGRATION_STAGE_GITHUB_USER }}
          GITHUB_PASS: ${{ secrets.INTEGRATION_STAGE_GITHUB_PASS }}
          SUPA_PLATFORM_URI: 'https://api.supabase.green/platform'
          SUPA_DASHBOARD: 'https://app.supabase.green'
          PROJECT_JSON: 'project.json'

  report:
    name: Upload report
    if: ${{ always() }}
    needs: [verification, integration]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v3

      - name: CP all results to the one folder
        shell: bash
        run: |
          mkdir ./allure-results
          cp ./allure-results-integration-stage/* ./allure-results/
          cp ./allure-results-verification-stage/* ./allure-results/

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          repository: supabase/test-reports
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          github_repo: test-reports
          allure_results: allure-results
          allure_history: allure-history
          subfolder: verification-stage
          keep_reports: 50

      - name: Deploy report to Github Pages
        if: ${{ !github.event.pull_request.head.repo.fork }}
        uses: peaceiris/actions-gh-pages@v2
        env:
          EXTERNAL_REPOSITORY: supabase/test-reports
          ACTIONS_DEPLOY_KEY: ${{ secrets.DEPLOY_TO_TEST_REPORTS_KEY }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Notify slack
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: TestBot
          SLACK_ICON_EMOJI: ':supa-eve:'
          SLACK_TITLE: 'Staging verification tests'
          SLACK_FOOTER: 'Supabase'
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Verification tests for staging have been ${{ job.status }}. <https://supabase.github.io/test-reports/verification-stage/${{ github.run_number }}|See the report>'
